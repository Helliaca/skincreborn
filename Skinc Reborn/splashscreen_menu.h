#pragma once
#include <iostream>

namespace SkincReborn {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;

	/// <summary>
	/// This is the splash-screen. Since it his hard to get a proper splash-screen aniamtion without an interface like adobe flash or sfml, this splashscreen works with a simple concept:
	/// A 10-second Gif is playing in the middle of the window and the window closes itsel after 9 seconds so the gif doesnt keep looping.
	/// This could have been added to the Main-menu directly with a picturebox, but two massive GIFs in one window is overkill.
	/// </summary>
	public ref class splashscreen_menu : public System::Windows::Forms::Form
	{
	public:
		splashscreen_menu(void)
		{
			InitializeComponent();
		}

	protected:
		~splashscreen_menu()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::PictureBox^  splash;
	private: System::Windows::Forms::Timer^  sptimer;
	private: System::ComponentModel::IContainer^  components;
	private: System::Windows::Forms::Button^  exit;
	protected: 

	private:
		int seconds;


#pragma region Windows Form Designer generated code
		/// <summary>
		/// Following code was generated by Visual Studio:
		/// </summary>
		void InitializeComponent(void)
		{
			this->components = (gcnew System::ComponentModel::Container());
			System::ComponentModel::ComponentResourceManager^  resources = (gcnew System::ComponentModel::ComponentResourceManager(splashscreen_menu::typeid));
			this->splash = (gcnew System::Windows::Forms::PictureBox());
			this->sptimer = (gcnew System::Windows::Forms::Timer(this->components));
			this->exit = (gcnew System::Windows::Forms::Button());
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^  >(this->splash))->BeginInit();
			this->SuspendLayout();
			// 
			// splash
			// 
			this->splash->Location = System::Drawing::Point(229, 114);
			this->splash->Name = L"splash";
			this->splash->Size = System::Drawing::Size(805, 657);
			this->splash->TabIndex = 0;
			this->splash->TabStop = false;
			// 
			// sptimer
			// 
			this->sptimer->Enabled = true;
			this->sptimer->Interval = 1000;
			this->sptimer->Tick += gcnew System::EventHandler(this, &splashscreen_menu::sptimer_Tick);
			// 
			// exit
			// 
			this->exit->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(24)), static_cast<System::Int32>(static_cast<System::Byte>(24)), 
				static_cast<System::Int32>(static_cast<System::Byte>(24)));
			this->exit->FlatAppearance->BorderColor = System::Drawing::Color::Red;
			this->exit->FlatAppearance->MouseDownBackColor = System::Drawing::Color::Maroon;
			this->exit->FlatAppearance->MouseOverBackColor = System::Drawing::Color::Black;
			this->exit->FlatStyle = System::Windows::Forms::FlatStyle::Flat;
			this->exit->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 14.25F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point, 
				static_cast<System::Byte>(0)));
			this->exit->ForeColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(192)), static_cast<System::Int32>(static_cast<System::Byte>(0)), 
				static_cast<System::Int32>(static_cast<System::Byte>(0)));
			this->exit->Location = System::Drawing::Point(1217, 12);
			this->exit->Name = L"exit";
			this->exit->Size = System::Drawing::Size(35, 32);
			this->exit->TabIndex = 8;
			this->exit->Text = L"X";
			this->exit->UseVisualStyleBackColor = false;
			this->exit->Click += gcnew System::EventHandler(this, &splashscreen_menu::exit_Click);
			// 
			// splashscreen_menu
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->BackColor = System::Drawing::Color::Black;
			this->ClientSize = System::Drawing::Size(1264, 885);
			this->Controls->Add(this->exit);
			this->Controls->Add(this->splash);
			this->FormBorderStyle = System::Windows::Forms::FormBorderStyle::None;
			this->Icon = (cli::safe_cast<System::Drawing::Icon^  >(resources->GetObject(L"$this.Icon")));
			this->KeyPreview = true;
			this->Name = L"splashscreen_menu";
			this->StartPosition = System::Windows::Forms::FormStartPosition::CenterScreen;
			this->Text = L"splashscreen_menu";
			this->Load += gcnew System::EventHandler(this, &splashscreen_menu::splashscreen_menu_Load);
			this->KeyDown += gcnew System::Windows::Forms::KeyEventHandler(this, &splashscreen_menu::splashscreen_menu_KeyDown);
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^  >(this->splash))->EndInit();
			this->ResumeLayout(false);

		}
#pragma endregion
	private: System::Void splashscreen_menu_Load(System::Object^  sender, System::EventArgs^  e) {
				 seconds=0;
				 splash->Load("menuresource/splashscreen.gif");
			 }
	private: System::Void sptimer_Tick(System::Object^  sender, System::EventArgs^  e) {
				 //close window after 9 seconds. (9000ms)
				 seconds++;
				 if(seconds>9) this->Close();
			 }
	private: System::Void splashscreen_menu_KeyDown(System::Object^  sender, System::Windows::Forms::KeyEventArgs^  e) {
				 if(e->KeyCode == Keys::M){
					 std::cout<<"Changing FormBorderStyle"<<std::endl;
					 if(this->FormBorderStyle == System::Windows::Forms::FormBorderStyle::Sizable) this->FormBorderStyle = System::Windows::Forms::FormBorderStyle::None;
					 else this->FormBorderStyle = System::Windows::Forms::FormBorderStyle::Sizable;
				 }
			 }
	private: System::Void exit_Click(System::Object^  sender, System::EventArgs^  e) {
				 this->Close();
			 }
};
}
