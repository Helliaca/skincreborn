#pragma once
#include "global_values.h"
#include "loaded_profile.h"
#include "game_settings.h"
#include <iostream>

namespace SkincReborn {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;
	using namespace System::IO;
	using namespace System::Text;

	/// <summary>
	/// This is the main menu
	/// </summary>
	public ref class main_menu_w : public System::Windows::Forms::Form
	{
	public:
		main_menu_w(void)
		{
			InitializeComponent();
		}

	protected:
		~main_menu_w()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::Button^  b_chp;
	private: System::Windows::Forms::PictureBox^  b_wizard;

	private: System::Windows::Forms::PictureBox^  pictureBox2;
	private: System::Windows::Forms::Button^  b_cg;
	private: System::Windows::Forms::Button^  b_tut;
	private: System::Windows::Forms::Label^  b_wizard_text;
	private: System::Windows::Forms::Button^  exit;

	private: System::Windows::Forms::Button^  b_cr;

	protected: 

	private:
		/// <summary>
		/// Fucntions to help save the game properly.
		/// </summary>
		String^ levelToString( level s ) {
			if (s==NEWB) return "NEWB";
			else if(s==BOGBEARD) return "BOGBEARD";
			else if(s==LYNWOOD) return "LYNWOOD";
			else if(s==FIRELORD) return "FIRELORD";
			else if(s==TERIDAX) return "TERIDAX";
			else if(s==BOT) return "BOT";
			else if(s==LANCE) return "LANCE";
			else if(s==COMPLETE) return "COMPLETE";
			return "NEWB";
		}

		String^ skinToString(int skin)
		{
			switch(skin) {
			case 1 : {return "DEMENTOR"; break;}
			case 2 : {return "ALTAIR"; break;}
			case 3 : {return "FREEMAN"; break;}
			case 4 : {return "ASH"; break;}
			default : {return "DEMENTOR"; break;}
			}
		}

		String^ boolToString( bool arg ) {
			if(arg) return "1";
			return "0";
		}

		void savegame()
		{
			String^ path = "saves/";
			 path = path + gcnew System::String(p_name.c_str()) + ".txt";

			   // Delete the file if it exists.
			   if ( File::Exists( path ) )
			   {
				  File::Delete( path );
			   }

			   // Create the file.
			   FileStream^ fs = File::Create( path );
			   try
			   {
				   array<Byte>^info = (gcnew UTF8Encoding( true ))->GetBytes( "#name\n" + (gcnew System::String(p_name.c_str())) + "\n#skin\n" + skinToString(p_skin) + "\n#firststart\n" + boolToString(p_firststart) + "\n#level\n" + levelToString(p_level) + "\n#health\n" + System::Convert::ToString(p_health) + "\n#speed\n" + System::Convert::ToString(p_speed) + "\n#firepower\n" + System::Convert::ToString(p_firepower) + "\n#lvluppoints\n" + System::Convert::ToString(p_lvluppoints) );
				  fs->Write( info, 0, info->Length );
			   }
			   finally
			   {
				  if ( fs )
						delete (IDisposable^)fs;
			   }
		}
		System::ComponentModel::Container ^components;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// Following code was generated by Visual Studio:
		/// </summary>
		void InitializeComponent(void)
		{
			System::ComponentModel::ComponentResourceManager^  resources = (gcnew System::ComponentModel::ComponentResourceManager(main_menu_w::typeid));
			this->b_chp = (gcnew System::Windows::Forms::Button());
			this->b_wizard = (gcnew System::Windows::Forms::PictureBox());
			this->pictureBox2 = (gcnew System::Windows::Forms::PictureBox());
			this->b_cg = (gcnew System::Windows::Forms::Button());
			this->b_tut = (gcnew System::Windows::Forms::Button());
			this->b_cr = (gcnew System::Windows::Forms::Button());
			this->b_wizard_text = (gcnew System::Windows::Forms::Label());
			this->exit = (gcnew System::Windows::Forms::Button());
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^  >(this->b_wizard))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^  >(this->pictureBox2))->BeginInit();
			this->SuspendLayout();
			// 
			// b_chp
			// 
			this->b_chp->BackColor = System::Drawing::Color::Transparent;
			this->b_chp->FlatAppearance->BorderSize = 0;
			this->b_chp->FlatAppearance->MouseDownBackColor = System::Drawing::Color::Transparent;
			this->b_chp->FlatAppearance->MouseOverBackColor = System::Drawing::Color::Transparent;
			this->b_chp->FlatStyle = System::Windows::Forms::FlatStyle::Flat;
			this->b_chp->Image = (cli::safe_cast<System::Drawing::Image^  >(resources->GetObject(L"b_chp.Image")));
			this->b_chp->Location = System::Drawing::Point(609, 89);
			this->b_chp->Name = L"b_chp";
			this->b_chp->Size = System::Drawing::Size(340, 81);
			this->b_chp->TabIndex = 0;
			this->b_chp->UseVisualStyleBackColor = false;
			this->b_chp->Click += gcnew System::EventHandler(this, &main_menu_w::b_chp_Click);
			// 
			// b_wizard
			// 
			this->b_wizard->BackColor = System::Drawing::Color::Transparent;
			this->b_wizard->Image = (cli::safe_cast<System::Drawing::Image^  >(resources->GetObject(L"b_wizard.Image")));
			this->b_wizard->Location = System::Drawing::Point(973, 626);
			this->b_wizard->Name = L"b_wizard";
			this->b_wizard->Size = System::Drawing::Size(280, 473);
			this->b_wizard->TabIndex = 1;
			this->b_wizard->TabStop = false;
			// 
			// pictureBox2
			// 
			this->pictureBox2->BackColor = System::Drawing::SystemColors::Desktop;
			this->pictureBox2->Image = (cli::safe_cast<System::Drawing::Image^  >(resources->GetObject(L"pictureBox2.Image")));
			this->pictureBox2->Location = System::Drawing::Point(0, 0);
			this->pictureBox2->Name = L"pictureBox2";
			this->pictureBox2->Size = System::Drawing::Size(1280, 924);
			this->pictureBox2->TabIndex = 2;
			this->pictureBox2->TabStop = false;
			// 
			// b_cg
			// 
			this->b_cg->BackColor = System::Drawing::Color::Transparent;
			this->b_cg->FlatAppearance->BorderSize = 0;
			this->b_cg->FlatAppearance->MouseDownBackColor = System::Drawing::Color::Transparent;
			this->b_cg->FlatAppearance->MouseOverBackColor = System::Drawing::Color::Transparent;
			this->b_cg->FlatStyle = System::Windows::Forms::FlatStyle::Flat;
			this->b_cg->Image = (cli::safe_cast<System::Drawing::Image^  >(resources->GetObject(L"b_cg.Image")));
			this->b_cg->Location = System::Drawing::Point(252, 388);
			this->b_cg->Name = L"b_cg";
			this->b_cg->Size = System::Drawing::Size(170, 87);
			this->b_cg->TabIndex = 3;
			this->b_cg->UseVisualStyleBackColor = false;
			this->b_cg->Click += gcnew System::EventHandler(this, &main_menu_w::b_cg_Click);
			// 
			// b_tut
			// 
			this->b_tut->BackColor = System::Drawing::Color::Transparent;
			this->b_tut->FlatAppearance->BorderSize = 0;
			this->b_tut->FlatAppearance->MouseDownBackColor = System::Drawing::Color::Transparent;
			this->b_tut->FlatAppearance->MouseOverBackColor = System::Drawing::Color::Transparent;
			this->b_tut->FlatStyle = System::Windows::Forms::FlatStyle::Flat;
			this->b_tut->Image = (cli::safe_cast<System::Drawing::Image^  >(resources->GetObject(L"b_tut.Image")));
			this->b_tut->Location = System::Drawing::Point(749, 554);
			this->b_tut->Name = L"b_tut";
			this->b_tut->Size = System::Drawing::Size(200, 88);
			this->b_tut->TabIndex = 4;
			this->b_tut->UseVisualStyleBackColor = false;
			this->b_tut->Click += gcnew System::EventHandler(this, &main_menu_w::b_tut_Click);
			// 
			// b_cr
			// 
			this->b_cr->BackColor = System::Drawing::Color::Transparent;
			this->b_cr->FlatAppearance->BorderSize = 0;
			this->b_cr->FlatAppearance->MouseDownBackColor = System::Drawing::Color::Transparent;
			this->b_cr->FlatAppearance->MouseOverBackColor = System::Drawing::Color::Transparent;
			this->b_cr->FlatStyle = System::Windows::Forms::FlatStyle::Flat;
			this->b_cr->Image = (cli::safe_cast<System::Drawing::Image^  >(resources->GetObject(L"b_cr.Image")));
			this->b_cr->Location = System::Drawing::Point(688, 729);
			this->b_cr->Name = L"b_cr";
			this->b_cr->Size = System::Drawing::Size(181, 82);
			this->b_cr->TabIndex = 5;
			this->b_cr->UseVisualStyleBackColor = false;
			this->b_cr->Click += gcnew System::EventHandler(this, &main_menu_w::b_cr_Click);
			// 
			// b_wizard_text
			// 
			this->b_wizard_text->AutoSize = true;
			this->b_wizard_text->BackColor = System::Drawing::Color::Transparent;
			this->b_wizard_text->Font = (gcnew System::Drawing::Font(L"Calibri", 10, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point, 
				static_cast<System::Byte>(0)));
			this->b_wizard_text->Image = (cli::safe_cast<System::Drawing::Image^  >(resources->GetObject(L"b_wizard_text.Image")));
			this->b_wizard_text->ImageAlign = System::Drawing::ContentAlignment::TopLeft;
			this->b_wizard_text->Location = System::Drawing::Point(977, 436);
			this->b_wizard_text->Name = L"b_wizard_text";
			this->b_wizard_text->Size = System::Drawing::Size(265, 187);
			this->b_wizard_text->TabIndex = 6;
			this->b_wizard_text->Text = resources->GetString(L"b_wizard_text.Text");
			// 
			// exit
			// 
			this->exit->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(24)), static_cast<System::Int32>(static_cast<System::Byte>(24)), 
				static_cast<System::Int32>(static_cast<System::Byte>(24)));
			this->exit->FlatAppearance->BorderColor = System::Drawing::Color::Red;
			this->exit->FlatAppearance->MouseDownBackColor = System::Drawing::Color::Maroon;
			this->exit->FlatAppearance->MouseOverBackColor = System::Drawing::Color::Black;
			this->exit->FlatStyle = System::Windows::Forms::FlatStyle::Flat;
			this->exit->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 14.25F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point, 
				static_cast<System::Byte>(0)));
			this->exit->ForeColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(192)), static_cast<System::Int32>(static_cast<System::Byte>(0)), 
				static_cast<System::Int32>(static_cast<System::Byte>(0)));
			this->exit->Location = System::Drawing::Point(1233, 12);
			this->exit->Name = L"exit";
			this->exit->Size = System::Drawing::Size(35, 32);
			this->exit->TabIndex = 7;
			this->exit->Text = L"X";
			this->exit->UseVisualStyleBackColor = false;
			this->exit->Click += gcnew System::EventHandler(this, &main_menu_w::exit_Click);
			// 
			// main_menu_w
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->BackgroundImage = (cli::safe_cast<System::Drawing::Image^  >(resources->GetObject(L"$this.BackgroundImage")));
			this->ClientSize = System::Drawing::Size(1280, 924);
			this->Controls->Add(this->exit);
			this->Controls->Add(this->b_wizard_text);
			this->Controls->Add(this->b_cr);
			this->Controls->Add(this->b_tut);
			this->Controls->Add(this->b_cg);
			this->Controls->Add(this->b_wizard);
			this->Controls->Add(this->b_chp);
			this->Controls->Add(this->pictureBox2);
			this->FormBorderStyle = System::Windows::Forms::FormBorderStyle::None;
			this->Icon = (cli::safe_cast<System::Drawing::Icon^  >(resources->GetObject(L"$this.Icon")));
			this->KeyPreview = true;
			this->MaximumSize = System::Drawing::Size(1280, 924);
			this->MinimumSize = System::Drawing::Size(1280, 924);
			this->Name = L"main_menu_w";
			this->StartPosition = System::Windows::Forms::FormStartPosition::CenterScreen;
			this->Text = L"main_menu_w";
			this->Load += gcnew System::EventHandler(this, &main_menu_w::main_menu_w_Load);
			this->KeyDown += gcnew System::Windows::Forms::KeyEventHandler(this, &main_menu_w::main_menu_w_KeyDown);
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^  >(this->b_wizard))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^  >(this->pictureBox2))->EndInit();
			this->ResumeLayout(false);
			this->PerformLayout();

		}
#pragma endregion
	private: System::Void b_chp_Click(System::Object^  sender, System::EventArgs^  e) {
				 nextwindow=CHAMPIONSHIP;
				 this->Close();
			 }
	private: System::Void main_menu_w_Load(System::Object^  sender, System::EventArgs^  e) {
				 //pictureBox2->Load("menuresource/main-menu-background_gif.gif");
				 //output tutorial message if player starts game for the first time.
				 if(p_firststart)
				 {
					 b_wizard_text->Visible=true;
					 b_wizard->Visible=true;
					 b_chp->Enabled=false;
					 b_cg->Enabled=false;
					 if(p_name.size()<13) b_wizard_text->Text = "\n  Welcome " + gcnew System::String(p_name.c_str()) + "! Welcome to Skinc!\n  This is where the greatest warheroes,\n  warriors and fighters meet each other\n   on the battlefield to see who the strongest\n  of all of them is.I am Broderick, the Wizard,\n  an old  veteran of Skinc.\n  I will guide you through your challenges.\n  So do not hesitate! Click on 'Tutorial'\n  and I shall teach you all I know!\n  \n";
					 else b_wizard_text->Text = "\n  Welcome! Welcome to Skinc!\n  This is where the greatest warheroes,\n  warriors and fighters meet each other\n   on the battlefield to see who the strongest\n  of all of them is.I am Broderick, the Wizard,\n  an old  veteran of Skinc.\n  I will guide you through your challenges.\n  So do not hesitate! Click on 'Tutorial'\n  and I shall teach you all I know!\n  \n";
					 p_firststart=false;
					 savegame();
				 }
				 else
				 {
					 b_chp->Enabled=true;
					 b_wizard->Visible=false;
					 b_wizard_text->Visible=false;
					 b_cg->Enabled=true;
				 }
				 //save game so that firststart->0
				 savegame();

			 }
private: System::Void b_cg_Click(System::Object^  sender, System::EventArgs^  e) {
				nextwindow=CUSTOM;
				this->Close();
		 }
private: System::Void b_tut_Click(System::Object^  sender, System::EventArgs^  e) {
			 nextwindow=LOADING;
			 this->Close();
		 }
private: System::Void main_menu_w_KeyDown(System::Object^  sender, System::Windows::Forms::KeyEventArgs^  e) {
			 if(e->KeyCode == Keys::M){
				 std::cout<<"Changing FormBorderStyle"<<std::endl;
				 if(this->FormBorderStyle == System::Windows::Forms::FormBorderStyle::Sizable) this->FormBorderStyle = System::Windows::Forms::FormBorderStyle::None;
				 else this->FormBorderStyle = System::Windows::Forms::FormBorderStyle::Sizable;
			 }
		 }
private: System::Void exit_Click(System::Object^  sender, System::EventArgs^  e) {
			 this->Close();
		 }
private: System::Void b_cr_Click(System::Object^  sender, System::EventArgs^  e) {
			 nextwindow=CREDITS;
			 this->Close();
		 }
};
}
