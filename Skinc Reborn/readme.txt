Wow, someone is actually reading this! :D


Skinc: Reborn - readme
[1] - Introduction
[2] - Distribution/License
[3] - Gameplay/Guide
[4] - Open Source/Programming


1 - INTRODUCTION

First of all, thank you for downloading/trying Skinc.
This is an open-source and completely non-profit project developed by an IT-newb with too much time on his hands.
Note that any sign of professionalism is an upright fabrication in order to enhance your game-experience.
My deepest apoligies for any spelling/grammar mistakes in these readme-files. I just wrote them once and never
actually read them again.
Also a few words to that obnoxious folder called "menuhtml" that you can find the the installation folder. 
This includes the old main-menu (notice the fancy animation that occurs when hovering over the buttons).
This menu had to be scrapped because of compatibility issues, but still looks pretty. RIP

PC Requirements:
Keep in mind that I had very (very) limited resources at hand to test the game so all pc requirements are very uncertain estimations on my parts. One thing is for sure, 8gb ram, intel i7 or AMD FX 6300 are definatley enough, and any mediocre graphics-card should do.
Memory: 1gb, 4gb recommended.
Processor: Intel i3 or above
Graphics card: Anything above a potato should do, at least 1gb dedicated would be nice.
Around 200MB HDD memory (or more).
Minimum Screen Resolution of 1280x1024


2 - Distribution/License

This copy is licensed under the GNU General Public License v3, 29 June 2007. (See http://www.gnu.org/copyleft/gpl.html)
For all the details you can check the license.txt file, here is a short summary:
- This software is free and completely non-commercial.
- This software includes no kind of warranty.
- You may modify the source code and redistribute the modified version non-commercially.

Note that these terms apply for the source code-only. Artwork, music and sound are licensed under different conditions, and you
will need permission from their respective owners. (Check the credits in the game for further information).
Most of these listed above are licensed under the Creative Commons Attribution License 3.0 (https://creativecommons.org/licenses/by/3.0). So as long
as you leave credit and keep the program non-commercial you should be fine.


3 - Gameplay/Guide

In order to keep this clean, this section requires a file on its own. Check manual.txt.

4 - Open Source/Programming

This sections hould only be of your interest if you are going to mess around with the source-code of the project.
I'll give you a heads up warning that the source code might often be a little messy, yet I tried my best to comment on the important code-lines to
make it as understandable as possible. Since I figure you'll still need some help, here is a short guide to how the source-code works:
Its a good idea to start right where the program itself starts, main.cpp. This file acts basically as the window-manager. The extern variable
"nextwindow" (from golbal_values.h) is being changed by the different windows (depending on what buttons you click etc.).
All these windows can be divided in two groups: the menu-windows and the game-windows.
The menu windows are basically the main-menu, the custom-game-menu etc etc. All these slow-loading windows are coded with the Microsoft Windows UI
(System namespace etc) so you'll probably find a lot of code generated by visual studio in these files.
The game-windows are just the loading-screen and the engine/game-screen itself. You can find both of them in the GameContainer-class.
This is where SFML 2.1 is used. Engine.GameLoop() basically returns the health that the player has once the game ends. The whole function is quite a mess.
The other files associated with Engine.cpp are (i hope) relatively intuitive concerning what they do. For example bot.cpp is the AI-enemy, so this file 
includes everything concernign the enemy. terrain.cpp contains everything concerning the destructible terrain etc.